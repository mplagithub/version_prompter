#!/bin/bash
echo "Running pre-push hook..."
not_bumped_files=()

files=$(find . -type d -name .cs -prune -o -name CMakeLists.txt -print)

while read -r file; do
  prev_line=$(git show HEAD~1:"$file" 2>/dev/null | grep -E 'project\([^)]+VERSION[[:space:]]+[0-9]+\.[0-9]+\.[0-9]+')
  curr_line=$(git show HEAD:"$file" 2>/dev/null | grep -E 'project\([^)]+VERSION[[:space:]]+[0-9]+\.[0-9]+\.[0-9]+')
  prev_version=$(echo "$prev_line" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
  curr_version=$(echo "$curr_line" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
  if [[ -n "$prev_version" && -n "$curr_version" && "$prev_version" == "$curr_version" ]]; then
    not_bumped_files+=("$file")
  fi
done <<< "$(printf '%s\n' $files)"

if [ ${#not_bumped_files[@]} -eq 0 ]; then
  echo "All CMakeLists.txt versions are already bumped. Pushing change..."
  exit 0
fi


REPO_ROOT=$(git rev-parse --show-toplevel)
cd "$REPO_ROOT" || exit 1
for file in "${not_bumped_files[@]}"; do
  read -p "You did not update module version in $file. Should I update it (CMake/zuul)? (y/n): " answer < /dev/tty
  if [[ "$answer" == "y" ]]; then
    read -p "Which version part to bump? (major/minor/patch, or leave empty to skip): " part < /dev/tty
    if [[ "$part" =~ ^(major|minor|patch)$ ]]; then
      "$REPO_ROOT/.git/hooks/bump_cmake_version.sh" "$part" "$file"
    fi
  else
    echo "Skipped version update as requested..."
  fi
done


if git diff --quiet; then
  echo "No updates made, pushing change..."
  exit 0
else
  echo "Please double check stage/diff, 'commit --amend' changes, and push again"
  exit 1
fi





